/*
 * Copyright 2013-2020 Allegro Group
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package pl.allegro.finance.tradukisto.internal.languages.hebrew

import pl.allegro.finance.tradukisto.ValueConverters
import spock.lang.Specification
import spock.lang.Unroll

/**
 * The class HebrewIntegerToStringConverterTest is a test case for the functionality of the HebrewIntegerToStringConverter
 *  
 * @author <a href="mailto:tnsilver@gmail.com">T.N.Silverman</a>
 * @version 1.8.1
 * @since 1.8.1 
 */
class HebrewIntegerToStringConverterTest extends Specification {

    static converter = ValueConverters.HEBREW_INTEGER;

    @Unroll
    def "should convert single digits #value to '#words' in Hebrew"() {
        expect:
        converter.asWords(value) == words

        where:
        value | words
        0 | "\u05d0\u05e4\u05e1"
        1 | "\u05d0\u05d7\u05ea"
        2 | "\u05e9\u05ea\u05d9\u05d9\u05dd"
        3 | "\u05e9\u05dc\u05d5\u05e9"
        4 | "\u05d0\u05e8\u05d1\u05e2"
        5 | "\u05d7\u05de\u05e9"
        6 | "\u05e9\u05e9"
        7 | "\u05e9\u05d1\u05e2"
        8 | "\u05e9\u05de\u05d5\u05e0\u05d4"
        9 | "\u05ea\u05e9\u05e2"
    }

    @Unroll
    def "should convert double digit #value to '#words' in Hebrew"() {
        expect:
        converter.asWords(value) == words

        where:
        value | words
        10    | "\u05e2\u05e9\u05e8"
        11    | "\u05d0\u05d7\u05ea \u05e2\u05e9\u05e8\u05d4"
        12    | "\u05e9\u05ea\u05d9\u05dd \u05e2\u05e9\u05e8\u05d4"
        13    | "\u05e9\u05dc\u05d5\u05e9 \u05e2\u05e9\u05e8\u05d4"
        14    | "\u05d0\u05e8\u05d1\u05e2 \u05e2\u05e9\u05e8\u05d4"
        15    | "\u05d7\u05de\u05e9 \u05e2\u05e9\u05e8\u05d4"
        16    | "\u05e9\u05e9 \u05e2\u05e9\u05e8\u05d4"
        17    | "\u05e9\u05d1\u05e2 \u05e2\u05e9\u05e8\u05d4"
        18    | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05e2\u05e9\u05e8\u05d4"
        19    | "\u05ea\u05e9\u05e2 \u05e2\u05e9\u05e8\u05d4"
        20    | "\u05e2\u05e9\u05e8\u05d9\u05dd"
        21    | "\u05e2\u05e9\u05e8\u05d9\u05dd \u05d5\u05d0\u05d7\u05ea"
        30    | "\u05e9\u05dc\u05d5\u05e9\u05d9\u05dd"
        37    |  "\u05e9\u05dc\u05d5\u05e9\u05d9\u05dd \u05d5\u05e9\u05d1\u05e2"
        40    | "\u05d0\u05e8\u05d1\u05e2\u05d9\u05dd"
        43    | "\u05d0\u05e8\u05d1\u05e2\u05d9\u05dd \u05d5\u05e9\u05dc\u05d5\u05e9"
        50    | "\u05d7\u05de\u05d9\u05e9\u05d9\u05dd"
        58    | "\u05d7\u05de\u05d9\u05e9\u05d9\u05dd \u05d5\u05e9\u05de\u05d5\u05e0\u05d4"
        60    | "\u05e9\u05d9\u05e9\u05d9\u05dd"
        69    | "\u05e9\u05d9\u05e9\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2"
        70    | "\u05e9\u05d1\u05e2\u05d9\u05dd"
        76    | "\u05e9\u05d1\u05e2\u05d9\u05dd \u05d5\u05e9\u05e9"
        80    | "\u05e9\u05de\u05d5\u05e0\u05d9\u05dd"
        82    | "\u05e9\u05de\u05d5\u05e0\u05d9\u05dd \u05d5\u05e9\u05ea\u05d9\u05d9\u05dd"
        90    | "\u05ea\u05e9\u05e2\u05d9\u05dd"
        95    | "\u05ea\u05e9\u05e2\u05d9\u05dd \u05d5\u05d7\u05de\u05e9"
    }

    @Unroll
    def "should convert triple digit #value to '#words' in Hebrew"() {
        expect:
        converter.asWords(value) == words

        where:
        value | words
        100   | "\u05de\u05d0\u05d4"
        101   | "\u05de\u05d0\u05d4 \u05d5\u05d0\u05d7\u05ea"
        111   | "\u05de\u05d0\u05d4 \u05d5\u05d0\u05d7\u05ea \u05e2\u05e9\u05e8\u05d4"
        112   | "\u05de\u05d0\u05d4 \u05d5\u05e9\u05ea\u05d9\u05dd \u05e2\u05e9\u05e8\u05d4"
        114   | "\u05de\u05d0\u05d4 \u05d5\u05d0\u05e8\u05d1\u05e2 \u05e2\u05e9\u05e8\u05d4"
        120   | "\u05de\u05d0\u05d4 \u05d5\u05e2\u05e9\u05e8\u05d9\u05dd"
        145   | "\u05de\u05d0\u05d4 \u05d0\u05e8\u05d1\u05e2\u05d9\u05dd \u05d5\u05d7\u05de\u05e9"
        199   | "\u05de\u05d0\u05d4 \u05ea\u05e9\u05e2\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2"
        200   | "\u05de\u05d0\u05ea\u05d9\u05d9\u05dd"
        272   | "\u05de\u05d0\u05ea\u05d9\u05d9\u05dd \u05e9\u05d1\u05e2\u05d9\u05dd \u05d5\u05e9\u05ea\u05d9\u05d9\u05dd"
        300   | "\u05e9\u05dc\u05d5\u05e9 \u05de\u05d0\u05d5\u05ea"
        387   | "\u05e9\u05dc\u05d5\u05e9 \u05de\u05d0\u05d5\u05ea \u05e9\u05de\u05d5\u05e0\u05d9\u05dd \u05d5\u05e9\u05d1\u05e2"
        400   | "\u05d0\u05e8\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea"
        448   | "\u05d0\u05e8\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea \u05d0\u05e8\u05d1\u05e2\u05d9\u05dd \u05d5\u05e9\u05de\u05d5\u05e0\u05d4"
        500   | "\u05d7\u05de\u05e9 \u05de\u05d0\u05d5\u05ea"
        569   | "\u05d7\u05de\u05e9 \u05de\u05d0\u05d5\u05ea \u05e9\u05d9\u05e9\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2"
        600   | "\u05e9\u05e9 \u05de\u05d0\u05d5\u05ea"
        625   | "\u05e9\u05e9 \u05de\u05d0\u05d5\u05ea \u05e2\u05e9\u05e8\u05d9\u05dd \u05d5\u05d7\u05de\u05e9"
        700   | "\u05e9\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea"
        782   | "\u05e9\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea \u05e9\u05de\u05d5\u05e0\u05d9\u05dd \u05d5\u05e9\u05ea\u05d9\u05d9\u05dd"
        800   | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d0\u05d5\u05ea"
        895   | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d0\u05d5\u05ea \u05ea\u05e9\u05e2\u05d9\u05dd \u05d5\u05d7\u05de\u05e9"
        900   | "\u05ea\u05e9\u05e2 \u05de\u05d0\u05d5\u05ea"
        999   | "\u05ea\u05e9\u05e2 \u05de\u05d0\u05d5\u05ea \u05ea\u05e9\u05e2\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2"
    }

    @Unroll
    def "should convert four digit #value to '#words' in Hebrew"() {
        expect:
        converter.asWords(value) == words

        where:
        value | words
        1000  | "\u05d0\u05dc\u05e3"
        2000  | "\u05d0\u05dc\u05e4\u05d9\u05d9\u05dd"
        2200  | "\u05d0\u05dc\u05e4\u05d9\u05d9\u05dd \u05de\u05d0\u05ea\u05d9\u05d9\u05dd"
        2201  | "\u05d0\u05dc\u05e4\u05d9\u05d9\u05dd \u05de\u05d0\u05ea\u05d9\u05d9\u05dd \u05d5\u05d0\u05d7\u05ea"
        3000  | "\u05e9\u05dc\u05d5\u05e9\u05ea \u05d0\u05dc\u05e4\u05d9\u05dd"
        4000  | "\u05d0\u05e8\u05d1\u05e2\u05ea \u05d0\u05dc\u05e4\u05d9\u05dd"
        5000  | "\u05d7\u05de\u05e9\u05ea \u05d0\u05dc\u05e4\u05d9\u05dd"
        7634  | "\u05e9\u05d1\u05e2\u05ea \u05d0\u05dc\u05e4\u05d9\u05dd \u05e9\u05e9 \u05de\u05d0\u05d5\u05ea \u05e9\u05dc\u05d5\u05e9\u05d9\u05dd \u05d5\u05d0\u05e8\u05d1\u05e2"
        8001  | "\u05e9\u05de\u05d5\u05e0\u05ea \u05d0\u05dc\u05e4\u05d9\u05dd \u05d5\u05d0\u05d7\u05ea"
        8003  | "\u05e9\u05de\u05d5\u05e0\u05ea \u05d0\u05dc\u05e4\u05d9\u05dd \u05d5\u05e9\u05dc\u05d5\u05e9"
        8101  | "\u05e9\u05de\u05d5\u05e0\u05ea \u05d0\u05dc\u05e4\u05d9\u05dd \u05de\u05d0\u05d4 \u05d5\u05d0\u05d7\u05ea"
        9999  | "\u05ea\u05e9\u05e2\u05ea \u05d0\u05dc\u05e4\u05d9\u05dd \u05ea\u05e9\u05e2 \u05de\u05d0\u05d5\u05ea \u05ea\u05e9\u05e2\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2"
    }

    @Unroll
    def "should convert five digit #value to '#words' in Hebrew"() {
        expect:
        converter.asWords(value) == words

        where:
        value | words
        11000 | "\u05d0\u05d7\u05d3 \u05e2\u05e9\u05e8 \u05d0\u05dc\u05e3"
        15000 | "\u05d7\u05de\u05d9\u05e9\u05d4 \u05e2\u05e9\u05e8 \u05d0\u05dc\u05e3"
        21000 | "\u05e2\u05e9\u05e8\u05d9\u05dd \u05d5\u05d0\u05d7\u05d3 \u05d0\u05dc\u05e3"
        24190 | "\u05e2\u05e9\u05e8\u05d9\u05dd \u05d5\u05d0\u05e8\u05d1\u05e2\u05d4 \u05d0\u05dc\u05e3 \u05de\u05d0\u05d4 \u05d5\u05ea\u05e9\u05e2\u05d9\u05dd"
        29000 | "\u05e2\u05e9\u05e8\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2\u05d4 \u05d0\u05dc\u05e3"
        29001 | "\u05e2\u05e9\u05e8\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2\u05d4 \u05d0\u05dc\u05e3 \u05d5\u05d0\u05d7\u05ea"
    }

    @Unroll
    def "should convert six digit #value to '#words' in Hebrew"() {
        expect:
        converter.asWords(value) == words

        where:
        value  | words
        653000 | "\u05e9\u05e9 \u05de\u05d0\u05d5\u05ea \u05d7\u05de\u05d9\u05e9\u05d9\u05dd \u05d5\u05e9\u05dc\u05d5\u05e9\u05d4 \u05d0\u05dc\u05e3"
        123454 | "\u05de\u05d0\u05d4 \u05e2\u05e9\u05e8\u05d9\u05dd \u05d5\u05e9\u05dc\u05d5\u05e9\u05d4 \u05d0\u05dc\u05e3 \u05d0\u05e8\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea \u05d7\u05de\u05d9\u05e9\u05d9\u05dd \u05d5\u05d0\u05e8\u05d1\u05e2"
        700000 | "\u05e9\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea \u05d0\u05dc\u05e3"
        700001 | "\u05e9\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea \u05d0\u05dc\u05e3 \u05d5\u05d0\u05d7\u05ea"
        803003 | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d0\u05d5\u05ea \u05d5\u05e9\u05dc\u05d5\u05e9\u05d4 \u05d0\u05dc\u05e3 \u05d5\u05e9\u05dc\u05d5\u05e9"
        999999 | "\u05ea\u05e9\u05e2 \u05de\u05d0\u05d5\u05ea \u05ea\u05e9\u05e2\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2\u05d4 \u05d0\u05dc\u05e3 \u05ea\u05e9\u05e2 \u05de\u05d0\u05d5\u05ea \u05ea\u05e9\u05e2\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2"
    }

    @Unroll
    def "should convert seven digit #value to '#words' in Hebrew"() {
        expect:
        converter.asWords(value) == words

        where:
        value   | words
        1000000 | "\u05de\u05d9\u05dc\u05d9\u05d5\u05df"
        2000000 | "\u05e9\u05e0\u05d9 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"
        3030303 | "\u05e9\u05dc\u05d5\u05e9\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05e9\u05dc\u05d5\u05e9\u05d9\u05dd \u05d0\u05dc\u05e3 \u05e9\u05dc\u05d5\u05e9 \u05de\u05d0\u05d5\u05ea \u05d5\u05e9\u05dc\u05d5\u05e9"
        5000000 | "\u05d7\u05de\u05d9\u05e9\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"
        8030003 | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05e9\u05dc\u05d5\u05e9\u05d9\u05dd \u05d0\u05dc\u05e3 \u05d5\u05e9\u05dc\u05d5\u05e9"
        8030011 | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05e9\u05dc\u05d5\u05e9\u05d9\u05dd \u05d0\u05dc\u05e3 \u05d5\u05d0\u05d7\u05ea \u05e2\u05e9\u05e8\u05d4"
        8000013 | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05d5\u05e9\u05dc\u05d5\u05e9 \u05e2\u05e9\u05e8\u05d4"
        8000300 | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05d5\u05e9\u05dc\u05d5\u05e9 \u05de\u05d0\u05d5\u05ea"
        8030020 | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05e9\u05dc\u05d5\u05e9\u05d9\u05dd \u05d0\u05dc\u05e3 \u05d5\u05e2\u05e9\u05e8\u05d9\u05dd"
        8030095 | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05e9\u05dc\u05d5\u05e9\u05d9\u05dd \u05d0\u05dc\u05e3 \u05ea\u05e9\u05e2\u05d9\u05dd \u05d5\u05d7\u05de\u05e9"
    }

    @Unroll
    def "should convert eight digit #value to '#words' in Hebrew"() {
        expect:
        converter.asWords(value) == words

        where:
        value    | words
        23437219 | "\u05e2\u05e9\u05e8\u05d9\u05dd \u05d5\u05e9\u05dc\u05d5\u05e9\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05d0\u05e8\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea \u05e9\u05dc\u05d5\u05e9\u05d9\u05dd \u05d5\u05e9\u05d1\u05e2\u05d4 \u05d0\u05dc\u05e3 \u05de\u05d0\u05ea\u05d9\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2 \u05e2\u05e9\u05e8\u05d4"
        30303030 | "\u05e9\u05dc\u05d5\u05e9\u05d9\u05dd \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05e9\u05dc\u05d5\u05e9 \u05de\u05d0\u05d5\u05ea \u05d5\u05e9\u05dc\u05d5\u05e9\u05d4 \u05d0\u05dc\u05e3 \u05d5\u05e9\u05dc\u05d5\u05e9\u05d9\u05dd"
        80300003 | "\u05e9\u05de\u05d5\u05e0\u05d9\u05dd \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05e9\u05dc\u05d5\u05e9 \u05de\u05d0\u05d5\u05ea \u05d0\u05dc\u05e3 \u05d5\u05e9\u05dc\u05d5\u05e9"
    }

    @Unroll
    def "should convert nine digit #value to '#words' in Hebrew"() {
        expect:
        converter.asWords(value) == words

        where:
        value      | words
        100000000  | "\u05de\u05d0\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"
        123456789  | "\u05de\u05d0\u05d4 \u05e2\u05e9\u05e8\u05d9\u05dd \u05d5\u05e9\u05dc\u05d5\u05e9\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05d0\u05e8\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea \u05d7\u05de\u05d9\u05e9\u05d9\u05dd \u05d5\u05e9\u05d9\u05e9\u05d4 \u05d0\u05dc\u05e3 \u05e9\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea \u05e9\u05de\u05d5\u05e0\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2"
        303030303  | "\u05e9\u05dc\u05d5\u05e9 \u05de\u05d0\u05d5\u05ea \u05d5\u05e9\u05dc\u05d5\u05e9\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05e9\u05dc\u05d5\u05e9\u05d9\u05dd \u05d0\u05dc\u05e3 \u05e9\u05dc\u05d5\u05e9 \u05de\u05d0\u05d5\u05ea \u05d5\u05e9\u05dc\u05d5\u05e9"
        322089890  | "\u05e9\u05dc\u05d5\u05e9 \u05de\u05d0\u05d5\u05ea \u05e2\u05e9\u05e8\u05d9\u05dd \u05d5\u05b9\u05e9\u05e0\u05d9\u05d9\u05dd \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05e9\u05de\u05d5\u05e0\u05d9\u05dd \u05d5\u05ea\u05e9\u05e2\u05d4 \u05d0\u05dc\u05e3 \u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d0\u05d5\u05ea \u05d5\u05ea\u05e9\u05e2\u05d9\u05dd"
        803000003  | "\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d0\u05d5\u05ea \u05d5\u05e9\u05dc\u05d5\u05e9\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05d5\u05e9\u05dc\u05d5\u05e9"
    }

    @Unroll
    def "should convert ten digit #value to '#words' in Hebrew"() {
        expect:
        converter.asWords(value) == words

        where:
        value      | words
        1000000000 | "\u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"
        1000000003 | "\u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3 \u05d5\u05e9\u05dc\u05d5\u05e9"
        1000000013 | "\u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3 \u05d5\u05e9\u05dc\u05d5\u05e9 \u05e2\u05e9\u05e8\u05d4"
        2009000200 | "\u05e9\u05e0\u05d9 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3 \u05ea\u05e9\u05e2\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05d5\u05de\u05d0\u05ea\u05d9\u05d9\u05dd"
        2009000201 | "\u05e9\u05e0\u05d9 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3 \u05ea\u05e9\u05e2\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05de\u05d0\u05ea\u05d9\u05d9\u05dd \u05d5\u05d0\u05d7\u05ea"
        2009010001 | "\u05e9\u05e0\u05d9 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3 \u05ea\u05e9\u05e2\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05e2\u05e9\u05e8\u05ea \u05d0\u05dc\u05e4\u05d9\u05dd \u05d5\u05d0\u05d7\u05ea"
        2020202020 | "\u05e9\u05e0\u05d9 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3 \u05e2\u05e9\u05e8\u05d9\u05dd \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05de\u05d0\u05ea\u05d9\u05d9\u05dd \u05d5\u05b9\u05e9\u05e0\u05d9\u05d9\u05dd \u05d0\u05dc\u05e3 \u05d5\u05e2\u05e9\u05e8\u05d9\u05dd"
        2147483647 | "\u05e9\u05e0\u05d9 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3 \u05de\u05d0\u05d4 \u05d0\u05e8\u05d1\u05e2\u05d9\u05dd \u05d5\u05e9\u05d1\u05e2\u05d4 \u05de\u05d9\u05dc\u05d9\u05d5\u05df \u05d0\u05e8\u05d1\u05e2 \u05de\u05d0\u05d5\u05ea \u05e9\u05de\u05d5\u05e0\u05d9\u05dd \u05d5\u05e9\u05dc\u05d5\u05e9\u05d4 \u05d0\u05dc\u05e3 \u05e9\u05e9 \u05de\u05d0\u05d5\u05ea \u05d0\u05e8\u05d1\u05e2\u05d9\u05dd \u05d5\u05e9\u05d1\u05e2"
    }
}

